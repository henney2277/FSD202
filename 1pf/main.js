// 큐브 트립 메인 JS - main.js //

////  전역변수구역 ///////
// 각 도시정보를 객체에 셋팅한다

// 도시정보객체
var city = {
    "서울":"서울특별시 마포구 성산동에 위치한 축구장. 2002 FIFA 월드컵 한국/일본을 위해 건설된 아시아 최대 규모의 축구 전용구장이자 현재 대한민국 축구 국가대표팀, 그리고 K리그1 참가팀 FC 서울의 홈 구장으로 사용되고 있다.",
    "마드리드":"스페인 마드리드에 위치한 라 리가의 프로 축구 클럽 레알 마드리드 CF의 홈구장. 스페인 축구 국가대표팀의 홈구장으로 쓰이기도 한다. '산티아고 베르나베우(Santiago Bernabéu)', 혹은 '엘 베르나베우(El Bernabéu)'라는 약칭으로 잘 알려져 있다. 이름의 유래는 클럽의 전설적인 인물인 산티아고 베르나베우이다.UEFA 유로 결승전과 FIFA 월드컵 결승전을 모두 개최한 최초의 유럽 경기장으로, 세계에서 가장 유명한 축구 경기장 중 하나이다.",
    "베를린":"영어명인 '베를린 올림픽 스타디움'.독일 베를린에 위치한 종합 경기장으로, 독일 축구 국가대표팀과 헤르타 BSC의 홈구장이다.잉글랜드에는 웸블리 스타디움이 있듯 올림피아슈타디온도 단순히 헤르타 베를린의 홈구장을 넘어 독일 축구의 심장을 상징하는데, 1936년 개장 이래 수없이 많은 메이저 대회의 결승전을 치러온데다 DFB-포칼의 결승전이 매년 여기서 개최되어왔다.대중교통은 베를린 S5 올림피아슈타디온역, 베를린 지하철 U2 올림피아 슈타디온역을 이용하면 된다. S반 역이 경기장에서 좀더 가깝다.",
    "런던":"1923년부터 2000년까지 개방되어, 2003년에 철거된 구 웸블리 스타디움. 가운데에 있는 두 개의 타워 모형의 조형물이 유명했다.현재 영국에서 가장 큰 경기장으로, 총 9만 명을 수용할 수 있다. 지금도 엄청난 규모이지만, 구 웸블리 스타디움 시절에는 트랙이 있는 육상 겸용으로 최대 12만 7천 명을 수용할 수 있는 엄청난 규모를 보유했었다.그야말로 크고 아름다운 경기장으로 영국에서 가장 큰 경기장인 만큼 영국을 대표하는 스포츠 스타디움이기도 하다.현재의 웸블리와 구분하기 위해 1923년부터 2000년까지 운영한 웸블리를 구 웸블리 스타디움으로 칭한다.",
    "파리":"파르크 데 프랭스(Parc des Princes)는 프랑스 수도 파리의 16구에 위치해 있으며 1897년 7월 18일에 개장하였고 이후 2번 (1932, 1972)의 보수 및 확장공사를 거쳐 지금에 이르렀다파리를 연고로 하고 있는 클럽인 파리 생제르망 FC의 홈구장이다. 또한 UEFA가 지정한 4성급 경기장으로써 각종 유럽 대회를 유치하고 치를 수 있는 자격이 있는 경기장이기도 하다.2013 시즌 종료 후 6만명까지 증축을 계획하였지만 실행되지 않았다."    
};////// city객체 //////

/// 로드구역 : html태그를 모두 그린 후 실행구역 /////
/// load이벤트는 img, video 등의 모든 컨텐츠 로딩후 실행함(시간걸림)
/// DOMContentLoaded 이벤트는 html태그만 그리면 바로실행(시간단축)
window.addEventListener("DOMContentLoaded",function(){
    
    // 1. 로드구역 확인
    console.log("로딩완료!");
    
    
});///////// 로드구역 //////////////////////////////////
//////////////////////////////////////////////////////

/*///////////////////////////////////////////
    함수명:chgCity
    기능:메뉴 클릭시 도시명에 맞게 큐브를 회전시키고 
         설명이 나오게함
*////////////////////////////////////////////
function chgCity(me){ // me - 클릭된 요소 자신
    
    // 0. 선택된 요소의 값담기
    var sv = me.innerText;
    
    // 1.함수호출확인, 전달값 확인
    console.log("나야나!"+sv);
    
    // 2.변경대상: .cube
    var tg = document.getElementsByClassName("cube")[0];
    // 클래스니까 선택후 몇번째 꼭해야함! .item(순번) 또는 [순번]
    
    // 3. 큐브도시에 맞게 회전하기
    if(sv==="출발"){
        tg.style.transform = "translate(-50%,-50%) rotateX(0deg) rotateY(0deg)";
    }
    else if(sv==="서울"){
        tg.style.transform = "translate(-50%,-50%) rotateX(-90deg) rotateY(720deg)";
    }
    else if(sv==="런던"){
        tg.style.transform = "translate(-50%,-50%) rotateX(360deg) rotateY(-90deg)";
    }
    else if(sv==="베를린"){
        tg.style.transform = "translate(-50%,-50%) rotateX(-360deg) rotateY(90deg)";
    }
    else if(sv==="파리"){
        tg.style.transform = "translate(-50%,-50%) rotateX(720deg) rotateY(-180deg)";
    }
    else if(sv==="마드리드"){
        tg.style.transform = "translate(-50%,-50%) rotateX(90deg) rotateY(-360deg)";
    }
    
    // 큐브 트랜지션 설정하기
    tg.style.transition = "all 1.5s ease-in-out";
    
    
    ///////////////////////////////////////////////
    // 도시정보 박스 변수에 할당하기!!! ///////////////
    // 대상: .cbox
    var cbox = document.getElementsByClassName("cbox")[0];
    
    // 만약 "출발"메뉴를 클릭하면 위의 코드까지만 실행하여
    // 큐브 회전은 하되 도시정보 셋팅과 보이는기는 
    // 하지 않아야 한다!
    if(sv === "출발"){
        //1. 출발이면 도시정보박스 없애기
        cbox.style.opacity = "0";
        cbox.style.transition = "none";
        //2. 출발이면 아래 소스 실행하지 않기
        return false;//여기서 돌아감(false는 아무것도 안함!)
    } ///// if ///////////////
    
    // 4. 도시정보 셋팅하기 //
    // (1). 도시이름 셋팅하기
    // 대상: #cname
    // 선택된 메뉴명과 같으므로 메뉴명을 넣어준다!
    document.getElementById("cname").innerHTML = sv;
    
    // (2). 도시상세정보 셋팅하기
    // 대상: #cinfo
    // 미리셋팅된 도시명 속성의 내용으로 만든 city객체를 불러온다!
    document.getElementById("cinfo").innerHTML = city[sv];
    
    // 5. 도시정보박스 보이기(처음 이동시 바로 숨기기)
    
    // (1) 트랜지션 없이 투명하게!
    cbox.style.opacity = "0";
    cbox.style.transition = "none";
    
    // (2) 트랜지션으로 나타나기
    //setTimeout(함수,시간)
    //일정시간 후 함수실행하기
    // 함수는 직접 코드를 저장하는 익명함수로 구현함!
    // 1500은 1.5초임
    // 1.5초후 함수를 실행함!
    setTimeout(function(){
        console.log("여기실행!!!");
        cbox.style.opacity = "1";
        cbox.style.transition = "opacity .8s ease-in-out";
    },1500);//// 타임아웃함수 /////
    
    
}//////// chgCity 함수 ////////////////////////
////////////////////////////////////////////







